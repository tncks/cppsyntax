#include "stdafx.h"
#include <string>
#include <iostream>
#include <time.h>
#include <conio.h>

#define PURE = 0
#define SAFEDELETEARRAY(PTR) delete[](PTR); PTR = nullptr
#define SAFEDELETE(PTR) delete(PTR); PTR = nullptr
#define RANDOMIZE() (srand(time(nullptr)))
#define RANDOM(NUM) (rand() % (NUM))
#define BORDER() printf("-----------------------------------------------\n")

using namespace std;
class CGameStage {
public:
	CGameStage(void) {}
	virtual ~CGameStage(void) {}
	virtual void StageRule(void) const PURE;
	virtual void StageEnemyAI(void) const PURE;
	virtual void StageSpeed(void) const PURE;
};

class CFastStage : public CGameStage
{
	int Obstacle;
public:
	CFastStage(void) : Obstacle(5) { }
	virtual ~CFastStage(void) {}
	virtual void StageRule(void) const
	{
		printf("모든 장애물을 파괴하세요!\n");
		printf("장애물은 총 %d개 입니다!\n", Obstacle);
	}

	virtual void StageEnemyAI(void) const
	{
		printf("적들 수준 : 멍청함\n");
	}

	virtual void StageSpeed(void) const
	{
		printf("게임 속도 : 4배\n");
	}
};

class CHardStage : public CGameStage
{
	int Stone;
public:
	CHardStage(void) : Stone(10) { }
	virtual ~CHardStage(void) {}
	virtual void StageRule(void) const
	{
		printf("모든 적을 제거하세요!\n");
		printf("적들이 던질수 있는 돌의 총 개수는  %d개 입니다!\n", Stone);
	}

	virtual void StageEnemyAI(void) const
	{
		printf("적들 수준 : 영리함\n");
	}

	virtual void StageSpeed(void) const
	{
		printf("게임 속도 : 1배\n");
	}
};

class CBonusStage : public CGameStage
{
	int BonusLife;
public:
	CBonusStage(void) : BonusLife(2) { }
	virtual ~CBonusStage(void) {}
	virtual void StageRule(void) const
	{
		printf("보너스 스테이지입니다!\n");
		printf("추가 생명은 %d개 입니다!\n", BonusLife);
	}

	virtual void StageEnemyAI(void) const
	{
		printf("적들이 없습니다!\n");
	}

	virtual void StageSpeed(void) const
	{
		printf("게임 속도 : 2배\n");
	}
};

void PlayStage(const CGameStage *pStage)
{
	pStage->StageRule();
	pStage->StageEnemyAI();
	pStage->StageSpeed();
	BORDER();
}

CGameStage *SelectStage(CGameStage *&pStage)
{
	switch (RANDOM(3))
	{
	case 0:
		pStage = new CFastStage;
		break;
	case 1:
		pStage = new CHardStage;
		break;
	case 2:
		pStage = new CBonusStage;
		break;
	}

	return pStage;
}

char CheckFinish(void)
{
	char cBreak;
	printf("스테이지가 종료되었습니다.\n");
	printf("계속 하실 건가요? (Y / N) ");
	cBreak = _getch();
	if (tolower(cBreak) != 'n' && tolower(cBreak) != 'y')
	{
		cBreak = 'y';
	}

	return cBreak;
}

void GameStart(void)
{
	
	char cBreak = ' ';

	RANDOMIZE();
	while (tolower(cBreak) != 'n')
	{
		CGameStage *pStage = SelectStage(pStage);
		PlayStage(pStage);
		cBreak = CheckFinish();
		system("cls");
		SAFEDELETE(pStage);
	}

	
}

int main()
{
	GameStart();
	return 0;
}